{"version":3,"sources":["components/AddMovie.module.css","components/Movie.module.css","components/MoviesList.module.css","components/Movie.js","components/MoviesList.js","components/AddMovie.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Movie","props","className","classes","movie","title","releaseDate","openingText","MovieList","movies","map","id","AddMovie","titleRef","useRef","openingTextRef","releaseDateRef","onSubmit","event","preventDefault","current","value","onAddMovie","control","htmlFor","type","ref","rows","App","useState","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","useCallback","a","fetch","response","ok","Error","json","key","data","loadedMovies","push","message","method","body","JSON","stringify","headers","console","log","useEffect","content","length","MoviesList","Fragment","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61e96ffa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__3Bx3Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__PaFUC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__33Z94\"};","import React from 'react';\r\n\r\nimport classes from './Movie.module.css';\r\n\r\nconst Movie = (props) => {\r\n  return (\r\n    <li className={classes.movie}>\r\n      <h2>{props.title}</h2>\r\n      <h3>{props.releaseDate}</h3>\r\n      <p>{props.openingText}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Movie;","import React from 'react';\r\n\r\nimport Movie from './Movie';\r\nimport classes from './MoviesList.module.css';\r\n\r\nconst MovieList = (props) => {\r\n  return (\r\n    <ul className={classes['movies-list']}>\r\n      {props.movies.map((movie) => (\r\n        <Movie\r\n          key={movie.id}\r\n          title={movie.title}\r\n          releaseDate={movie.releaseDate}\r\n          openingText={movie.openingText}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MovieList;","import React, { useRef } from 'react';\r\n\r\nimport classes from './AddMovie.module.css';\r\n\r\nfunction AddMovie(props) {\r\n  const titleRef = useRef('');\r\n  const openingTextRef = useRef('');\r\n  const releaseDateRef = useRef('');\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n\r\n    // could add validation here...\r\n\r\n    const movie = {\r\n      title: titleRef.current.value,\r\n      openingText: openingTextRef.current.value,\r\n      releaseDate: releaseDateRef.current.value,\r\n    };\r\n\r\n    props.onAddMovie(movie);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className={classes.control}>\r\n        <label htmlFor='title'>Title</label>\r\n        <input type='text' id='title' ref={titleRef} />\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor='opening-text'>Opening Text</label>\r\n        <textarea rows='5' id='opening-text' ref={openingTextRef}></textarea>\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor='date'>Release Date</label>\r\n        <input type='text' id='date' ref={releaseDateRef} />\r\n      </div>\r\n      <button>Add Movie</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddMovie;","import React, { useState, useEffect, useCallback } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://react-http-6b4a6.firebaseio.com/movies.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n\n      const loadedMovies = [];\n\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate,\n        });\n      }\n\n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://react-http-6b4a6.firebaseio.com/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}